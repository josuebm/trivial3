/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package menu;

import java.awt.Color;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jugador.Jugador;

/**
 *
 * @author mza
 */
public class Stats extends javax.swing.JFrame {
    private Statement st;
    private String nombre;
    private ResultSet resul;
    private ResultSet resulb;
    private DefaultTableModel model;
    private Jugador player;
    private ImageIcon icono;
    /**
     * Creates new form Stats
     */
    public Stats(Statement st) throws SQLException {
        initComponents();
        this.st = st;
        model = new DefaultTableModel();
        
        ImageIcon ico=new ImageIcon(getClass().getResource("/menu/logo.png"));
        icono = new ImageIcon(ico.getImage().getScaledInstance(50, 50, Image.SCALE_DEFAULT));
        //nombre = JOptionPane.showInputDialog("Nombre Jugador:");
        nombre = (String) JOptionPane.showInputDialog(null, "Introduzca el nombre del jugador", "Estad√≠sticas", -1, icono, null, "");
        //System.out.println(nombre);
        if(nombre != null){
            resul = this.st.executeQuery("SELECT nombre_jugador, partidas_jugadas, partidas_ganadas, preguntas_acertadas, preguntas_falladas FROM jugador WHERE nombre_jugador = '"+nombre+"'");
            rellenarTabla();
            this.setVisible(true);

            tabla.setModel(model);
            cargarJugador();
            mostrarStats();
        }
        
    }
    
    public void rellenarTabla() throws SQLException{
        Vector vector = new Vector();
        
        model.addColumn("Nombre Jugador");
        model.addColumn("Partidas Jugadas");
        model.addColumn("Partidas Ganadas");
        model.addColumn("Preguntas Acertadas");
        model.addColumn("Preguntas Falladas");
        
        if(resul.next()){
            vector.add(resul.getString("nombre_jugador"));
            vector.add(resul.getInt("partidas_jugadas"));
            vector.add(resul.getInt("partidas_ganadas"));
            vector.add(resul.getInt("preguntas_acertadas"));
            vector.add(resul.getInt("preguntas_falladas"));
        }else{
            //JOptionPane.showMessageDialog(null, "El jugador no existe.");
            JOptionPane.showMessageDialog(null, "El jugador no existe.","", -1, icono);
            this.dispose();
        }
         
        model.addRow(vector);
        
    }

    public void cargarJugador() throws SQLException{
        System.out.println("Select Partidas_Jugadas, Partidas_Ganadas, Preguntas_Acertadas, Preguntas_Falladas from jugador where nombre_jugador = '"+nombre+"'");
        resulb = st.executeQuery("Select Partidas_Jugadas, Partidas_Ganadas, Preguntas_Acertadas, Preguntas_Falladas from jugador where nombre_jugador = '"+nombre+"'");
            while(resulb.next()){
                player = new Jugador(nombre, Integer.valueOf(resulb.getString(1)), Integer.valueOf(resulb.getString(2)), Integer.valueOf(resulb.getString(3)), Integer.valueOf(resulb.getString(4)));
            }
            

    }
    
    public void mostrarStats(){
        int totalP = player.getPA()+player.getPF();
        if(totalP != 0){
            preguntasTotal.setText(totalP+" preguntas totales contestadas.");
            porCientoA.setText(((player.getPA()*100)/totalP)+"% de preguntas acertadas.");
            porCientoF.setText(((player.getPF()*100)/totalP)+"% de preguntas falladas.");
        }else
            //JOptionPane.showMessageDialog(null, "El jugador no ha contestado ninguna pregunta.");
            JOptionPane.showMessageDialog(null, "El jugador no ha contestado ninguna pregunta.","", -1, icono);
           
        int partidasP = player.getPJ()-player.getPG();
        if(player.getPJ() != 0){
            partidasTotal.setText(player.getPJ()+" partidas totales jugadas.");
            porCientoG.setText(((player.getPG()*100)/player.getPJ())+"% de partidas ganadas.");
            porCientoP.setText(((partidasP*100)/player.getPJ())+"% de partidas perdidas.");
        }else
            //JOptionPane.showMessageDialog(null, "El jugador no ha jugado ninguna partida.");
            JOptionPane.showMessageDialog(null, "El jugador no ha jugado ninguna partida.","Cambio de jugador", -1, icono);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        preguntasTotal = new javax.swing.JLabel();
        porCientoA = new javax.swing.JLabel();
        porCientoF = new javax.swing.JLabel();
        partidasTotal = new javax.swing.JLabel();
        porCientoG = new javax.swing.JLabel();
        porCientoP = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla.setEnabled(false);
        jScrollPane2.setViewportView(tabla);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setText("Estadisticas");

        preguntasTotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        porCientoA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        porCientoA.setForeground(new java.awt.Color(0, 153, 0));

        porCientoF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        porCientoF.setForeground(new java.awt.Color(204, 0, 0));

        partidasTotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        porCientoG.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        porCientoG.setForeground(new java.awt.Color(0, 153, 0));

        porCientoP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        porCientoP.setForeground(new java.awt.Color(204, 0, 0));

        jButton1.setText("SALIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(partidasTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(preguntasTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(porCientoA, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                        .addComponent(porCientoG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(porCientoF, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                        .addComponent(porCientoP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(partidasTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porCientoP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porCientoG, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(preguntasTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(porCientoA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(porCientoF, javax.swing.GroupLayout.DEFAULT_SIZE, 9, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel partidasTotal;
    private javax.swing.JLabel porCientoA;
    private javax.swing.JLabel porCientoF;
    private javax.swing.JLabel porCientoG;
    private javax.swing.JLabel porCientoP;
    private javax.swing.JLabel preguntasTotal;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
